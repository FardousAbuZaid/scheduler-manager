{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class CalenderComponent {\n  constructor() {\n    this.daysOfWeek = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n    this.months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n    this.currentMonth = new Date().getMonth();\n    this.currentYear = new Date().getFullYear();\n    this.currentWeekStart = this.getStartOfWeek(new Date());\n    this.calendar = [];\n    this.isMonthView = true;\n    this.showPopup = false;\n    this.selectedDay = null;\n    this.tasks = [{\n      id: '1',\n      startTime: '2024-09-02 14:00',\n      endTime: '2024-09-02 16:00'\n    }, {\n      id: '2',\n      startTime: '2024-09-16 09:00',\n      endTime: '2024-09-16 10:00'\n    }];\n  }\n  ngOnInit() {\n    this.generateCalendar();\n  }\n  generateCalendar() {\n    if (this.isMonthView) {\n      this.generateMonthView();\n    } else {\n      this.generateWeekView();\n    }\n  }\n  generateMonthView() {\n    const firstDay = new Date(this.currentYear, this.currentMonth, 1).getDay();\n    const daysInMonth = new Date(this.currentYear, this.currentMonth + 1, 0).getDate();\n    const today = new Date();\n    let calendar = [];\n    let week = [];\n    for (let i = 0; i < firstDay; i++) {\n      week.push({\n        date: new Date(this.currentYear, this.currentMonth, -firstDay + i + 1),\n        isToday: false,\n        tasks: []\n      });\n    }\n    for (let day = 1; day <= daysInMonth; day++) {\n      const date = new Date(this.currentYear, this.currentMonth, day);\n      const isToday = date.toDateString() === today.toDateString();\n      const tasks = this.tasks.filter(task => new Date(task.startTime).toDateString() === date.toDateString());\n      week.push({\n        date,\n        isToday,\n        tasks\n      });\n      if (week.length === 7) {\n        calendar.push(week);\n        week = [];\n      }\n    }\n    if (week.length > 0) {\n      calendar.push(week);\n    }\n    this.calendar = calendar;\n  }\n  generateWeekView() {\n    const today = new Date();\n    const weekStart = this.currentWeekStart;\n    const weekEnd = new Date(weekStart);\n    weekEnd.setDate(weekEnd.getDate() + 6);\n    let calendar = [[]];\n    let currentDate = new Date(weekStart);\n    for (let i = 0; i < 7; i++) {\n      const date = new Date(currentDate);\n      const isToday = date.toDateString() === today.toDateString();\n      const tasks = this.tasks.filter(task => new Date(task.startTime).toDateString() === date.toDateString());\n      calendar[0].push({\n        date,\n        isToday,\n        tasks\n      });\n      currentDate.setDate(currentDate.getDate() + 1);\n    }\n    this.calendar = calendar;\n  }\n  getStartOfWeek(date) {\n    const day = date.getDay();\n    const diff = date.getDate() - day + (day === 0 ? -6 : 1); // Adjust for Sunday start\n    return new Date(date.setDate(diff));\n  }\n  previousMonth() {\n    if (this.currentMonth === 0) {\n      this.currentMonth = 11;\n      this.currentYear--;\n    } else {\n      this.currentMonth--;\n    }\n    this.generateCalendar();\n  }\n  nextMonth() {\n    if (this.currentMonth === 11) {\n      this.currentMonth = 0;\n      this.currentYear++;\n    } else {\n      this.currentMonth++;\n    }\n    this.generateCalendar();\n  }\n  previousWeek() {\n    this.currentWeekStart.setDate(this.currentWeekStart.getDate() - 7);\n    this.generateCalendar();\n  }\n  nextWeek() {\n    this.currentWeekStart.setDate(this.currentWeekStart.getDate() + 7);\n    this.generateCalendar();\n  }\n  getWeekRange() {\n    const start = this.currentWeekStart;\n    const end = new Date(start);\n    end.setDate(start.getDate() + 6);\n    return `${start.getDate()} ${this.months[start.getMonth()]} - ${end.getDate()} ${this.months[end.getMonth()]}`;\n  }\n  showTaskPopup(day) {\n    this.selectedDay = day;\n    this.showPopup = true;\n  }\n  closePopup() {\n    this.showPopup = false;\n  }\n  switchToMonthView() {\n    this.isMonthView = true;\n    this.generateCalendar();\n  }\n  switchToWeekView() {\n    this.isMonthView = false;\n    this.currentWeekStart = this.getStartOfWeek(new Date());\n    this.generateCalendar();\n  }\n  static #_ = this.ɵfac = function CalenderComponent_Factory(t) {\n    return new (t || CalenderComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CalenderComponent,\n    selectors: [[\"app-calender\"]],\n    decls: 0,\n    vars: 0,\n    template: function CalenderComponent_Template(rf, ctx) {},\n    styles: [\".dots[_ngcontent-%COMP%] {\\r\\n    text-align: center;\\r\\n  }\\r\\n  \\r\\n  .dot[_ngcontent-%COMP%] {\\r\\n    display: inline-block;\\r\\n    width: 10px;\\r\\n    height: 10px;\\r\\n    background-color: #007bff;\\r\\n    border-radius: 50%;\\r\\n    margin-right: 2px;\\r\\n  }\\r\\n  \\r\\n  td[_ngcontent-%COMP%] {\\r\\n    height: 100px;\\r\\n    vertical-align: top;\\r\\n    text-align: center;\\r\\n    position: relative;\\r\\n    cursor: pointer;\\r\\n  }\\r\\n  \\r\\n  td.active[_ngcontent-%COMP%] {\\r\\n    background-color: #f8f9fa;\\r\\n  }\\r\\n  \\r\\n  .modal[_ngcontent-%COMP%] {\\r\\n    display: block;\\r\\n    background-color: rgba(0, 0, 0, 0.5);\\r\\n  }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9jYWxlbmRlci9jYWxlbmRlci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksa0JBQWtCO0VBQ3BCOztFQUVBO0lBQ0UscUJBQXFCO0lBQ3JCLFdBQVc7SUFDWCxZQUFZO0lBQ1oseUJBQXlCO0lBQ3pCLGtCQUFrQjtJQUNsQixpQkFBaUI7RUFDbkI7O0VBRUE7SUFDRSxhQUFhO0lBQ2IsbUJBQW1CO0lBQ25CLGtCQUFrQjtJQUNsQixrQkFBa0I7SUFDbEIsZUFBZTtFQUNqQjs7RUFFQTtJQUNFLHlCQUF5QjtFQUMzQjs7RUFFQTtJQUNFLGNBQWM7SUFDZCxvQ0FBb0M7RUFDdEMiLCJzb3VyY2VzQ29udGVudCI6WyIuZG90cyB7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgfVxyXG4gIFxyXG4gIC5kb3Qge1xyXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgd2lkdGg6IDEwcHg7XHJcbiAgICBoZWlnaHQ6IDEwcHg7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDA3YmZmO1xyXG4gICAgYm9yZGVyLXJhZGl1czogNTAlO1xyXG4gICAgbWFyZ2luLXJpZ2h0OiAycHg7XHJcbiAgfVxyXG4gIFxyXG4gIHRkIHtcclxuICAgIGhlaWdodDogMTAwcHg7XHJcbiAgICB2ZXJ0aWNhbC1hbGlnbjogdG9wO1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gIH1cclxuICBcclxuICB0ZC5hY3RpdmUge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2Y4ZjlmYTtcclxuICB9XHJcbiAgXHJcbiAgLm1vZGFsIHtcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjUpO1xyXG4gIH1cclxuICAiXSwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}","map":{"version":3,"mappings":"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","names":["CalenderComponent","constructor","Date","getMonth","getFullYear","getStartOfWeek","id","startTime","endTime","ngOnInit","generateCalendar","isMonthView","generateMonthView","generateWeekView","firstDay","currentYear","currentMonth","getDay","daysInMonth","getDate","today","calendar","week","i","push","date","isToday","tasks","day","toDateString","filter","task","length","weekStart","currentWeekStart","weekEnd","setDate","currentDate","diff","previousMonth","nextMonth","previousWeek","nextWeek","getWeekRange","start","end","months","showTaskPopup","selectedDay","showPopup","closePopup","switchToMonthView","switchToWeekView","selectors","decls","vars","template","styles"],"sourceRoot":"","sources":["C:\\Users\\fardo\\scheduler_manager\\src\\app\\components\\calender\\calender.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\n\ninterface Task {\n  id: string;\n  startTime: string;\n  endTime: string;\n}\n\ninterface Day {\n  date: Date;\n  isToday: boolean;\n  tasks: Task[];\n}\n@Component({\n  selector: 'app-calender',\n  templateUrl: './calender.component.html',\n  styleUrls: ['./calender.component.css']\n})\nexport class CalenderComponent {\n  daysOfWeek = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n  months = [\n    'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August',\n    'September', 'October', 'November', 'December'\n  ];\n\n  currentMonth = new Date().getMonth();\n  currentYear = new Date().getFullYear();\n  currentWeekStart: Date = this.getStartOfWeek(new Date());\n  calendar: Day[][] = [];\n  isMonthView = true;\n\n  showPopup = false;\n  selectedDay: Day | null = null;\n\n  tasks: Task[] = [\n    { id: '1', startTime: '2024-09-02 14:00', endTime: '2024-09-02 16:00' },\n    { id: '2', startTime: '2024-09-16 09:00', endTime: '2024-09-16 10:00' }\n  ];\n\n  ngOnInit() {\n    this.generateCalendar();\n  }\n  generateCalendar() {\n    if (this.isMonthView) {\n      this.generateMonthView();\n    } else {\n      this.generateWeekView();\n    }\n  }\n\n  generateMonthView() {\n    const firstDay = new Date(this.currentYear, this.currentMonth, 1).getDay();\n    const daysInMonth = new Date(this.currentYear, this.currentMonth + 1, 0).getDate();\n    const today = new Date();\n    let calendar: Day[][] = [];\n    let week: Day[] = [];\n\n    for (let i = 0; i < firstDay; i++) {\n      week.push({ date: new Date(this.currentYear, this.currentMonth, -firstDay + i + 1), isToday: false, tasks: [] });\n    }\n\n    for (let day = 1; day <= daysInMonth; day++) {\n      const date = new Date(this.currentYear, this.currentMonth, day);\n      const isToday = date.toDateString() === today.toDateString();\n      const tasks = this.tasks.filter(task => new Date(task.startTime).toDateString() === date.toDateString());\n\n      week.push({ date, isToday, tasks });\n\n      if (week.length === 7) {\n        calendar.push(week);\n        week = [];\n      }\n    }\n\n    if (week.length > 0) {\n      calendar.push(week);\n    }\n\n    this.calendar = calendar;\n  }\n\n  generateWeekView() {\n    const today = new Date();\n    const weekStart = this.currentWeekStart;\n    const weekEnd = new Date(weekStart);\n    weekEnd.setDate(weekEnd.getDate() + 6);\n\n    let calendar: Day[][] = [[]];\n    let currentDate = new Date(weekStart);\n\n    for (let i = 0; i < 7; i++) {\n      const date = new Date(currentDate);\n      const isToday = date.toDateString() === today.toDateString();\n      const tasks = this.tasks.filter(task => new Date(task.startTime).toDateString() === date.toDateString());\n      calendar[0].push({ date, isToday, tasks });\n      currentDate.setDate(currentDate.getDate() + 1);\n    }\n\n    this.calendar = calendar;\n  }\n\n  getStartOfWeek(date: Date): Date {\n    const day = date.getDay();\n    const diff = date.getDate() - day + (day === 0 ? -6 : 1); // Adjust for Sunday start\n    return new Date(date.setDate(diff));\n  }\n\n  previousMonth() {\n    if (this.currentMonth === 0) {\n      this.currentMonth = 11;\n      this.currentYear--;\n    } else {\n      this.currentMonth--;\n    }\n    this.generateCalendar();\n  }\n\n  nextMonth() {\n    if (this.currentMonth === 11) {\n      this.currentMonth = 0;\n      this.currentYear++;\n    } else {\n      this.currentMonth++;\n    }\n    this.generateCalendar();\n  }\n\n  previousWeek() {\n    this.currentWeekStart.setDate(this.currentWeekStart.getDate() - 7);\n    this.generateCalendar();\n  }\n\n  nextWeek() {\n    this.currentWeekStart.setDate(this.currentWeekStart.getDate() + 7);\n    this.generateCalendar();\n  }\n\n  getWeekRange(): string {\n    const start = this.currentWeekStart;\n    const end = new Date(start);\n    end.setDate(start.getDate() + 6);\n    return `${start.getDate()} ${this.months[start.getMonth()]} - ${end.getDate()} ${this.months[end.getMonth()]}`;\n  }\n\n  showTaskPopup(day: Day) {\n    this.selectedDay = day;\n    this.showPopup = true;\n  }\n\n  closePopup() {\n    this.showPopup = false;\n  }\n\n  switchToMonthView() {\n    this.isMonthView = true;\n    this.generateCalendar();\n  }\n\n  switchToWeekView() {\n    this.isMonthView = false;\n    this.currentWeekStart = this.getStartOfWeek(new Date());\n    this.generateCalendar();\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}