{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet CalenderComponent = class CalenderComponent {\n  constructor(taskService) {\n    this.taskService = taskService;\n    this.tasks = [];\n    this.daysOfWeek = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n    this.months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n    this.currentMonth = new Date().getMonth();\n    this.currentYear = new Date().getFullYear();\n    this.currentWeekStart = this.getStartOfWeek(new Date());\n    this.calendar = [];\n    this.isMonthView = true;\n    this.activeNavButton = '';\n    this.showPopup = false;\n    this.selectedDay = null;\n    this.tasks = [];\n  }\n  ngOnInit() {\n    this.getTasks();\n  }\n  getTasks() {\n    this.taskService.getTasks().subscribe({\n      next: data => {\n        this.tasks = data;\n        this.generateCalendar();\n      },\n      error: err => console.error('Error fetching tasks', err)\n    });\n  }\n  generateCalendar() {\n    if (this.isMonthView) {\n      this.generateMonthView();\n    } else {\n      this.generateWeekView();\n    }\n  }\n  generateMonthView() {\n    const firstDay = new Date(this.currentYear, this.currentMonth, 1).getDay();\n    const daysInMonth = new Date(this.currentYear, this.currentMonth + 1, 0).getDate();\n    const today = new Date();\n    let calendar = [];\n    let week = [];\n    for (let i = 0; i < firstDay; i++) {\n      week.push({\n        date: new Date(this.currentYear, this.currentMonth, -firstDay + i + 1),\n        isToday: false,\n        tasks: []\n      });\n    }\n    for (let day = 1; day <= daysInMonth; day++) {\n      const date = new Date(this.currentYear, this.currentMonth, day);\n      const isToday = date.toDateString() === today.toDateString();\n      const tasks = this.tasks.filter(task => new Date(task.startTime).toDateString() === date.toDateString());\n      week.push({\n        date,\n        isToday,\n        tasks\n      });\n      if (week.length === 7) {\n        calendar.push(week);\n        week = [];\n      }\n    }\n    if (week.length > 0) {\n      calendar.push(week);\n    }\n    this.calendar = calendar;\n  }\n  generateWeekView() {\n    const today = new Date();\n    const weekStart = this.currentWeekStart;\n    const weekEnd = new Date(weekStart);\n    weekEnd.setDate(weekEnd.getDate() + 6);\n    let calendar = [[]];\n    let currentDate = new Date(weekStart);\n    for (let i = 0; i < 7; i++) {\n      const date = new Date(currentDate);\n      const isToday = date.toDateString() === today.toDateString();\n      const tasks = this.tasks.filter(task => new Date(task.startTime).toDateString() === date.toDateString());\n      calendar[0].push({\n        date,\n        isToday,\n        tasks\n      });\n      currentDate.setDate(currentDate.getDate() + 1);\n    }\n    this.calendar = calendar;\n  }\n  getStartOfWeek(date) {\n    const day = date.getDay();\n    const diff = date.getDate() - day + (day === 0 ? -6 : 1);\n    return new Date(date.setDate(diff));\n  }\n  previousMonth() {\n    this.activeNavButton = 'previous';\n    if (this.currentMonth === 0) {\n      this.currentMonth = 11;\n      this.currentYear--;\n    } else {\n      this.currentMonth--;\n    }\n    this.generateCalendar();\n  }\n  nextMonth() {\n    this.activeNavButton = 'next';\n    if (this.currentMonth === 11) {\n      this.currentMonth = 0;\n      this.currentYear++;\n    } else {\n      this.currentMonth++;\n    }\n    this.generateCalendar();\n  }\n  previousWeek() {\n    this.activeNavButton = 'previous';\n    this.currentWeekStart.setDate(this.currentWeekStart.getDate() - 7);\n    this.generateCalendar();\n  }\n  nextWeek() {\n    this.activeNavButton = 'next';\n    this.currentWeekStart.setDate(this.currentWeekStart.getDate() + 7);\n    this.generateCalendar();\n  }\n  getWeekRange() {\n    const start = this.currentWeekStart;\n    const end = new Date(start);\n    end.setDate(start.getDate() + 6);\n    return `${start.getDate()} ${this.months[start.getMonth()]} - ${end.getDate()} ${this.months[end.getMonth()]}`;\n  }\n  goToToday() {\n    this.activeNavButton = 'today';\n    const today = new Date();\n    this.currentMonth = today.getMonth();\n    this.currentYear = today.getFullYear();\n    this.currentWeekStart = this.getStartOfWeek(today);\n    this.generateCalendar();\n  }\n  showTaskPopup(day) {\n    this.selectedDay = day;\n    this.showPopup = true;\n  }\n  closePopup() {\n    this.showPopup = false;\n  }\n  switchToMonthView() {\n    this.isMonthView = true;\n    this.generateCalendar();\n  }\n  switchToWeekView() {\n    this.isMonthView = false;\n    this.currentWeekStart = this.getStartOfWeek(new Date());\n    this.generateCalendar();\n  }\n};\nCalenderComponent = __decorate([Component({\n  selector: 'app-calender',\n  templateUrl: './calender.component.html',\n  styleUrls: ['./calender.component.css']\n})], CalenderComponent);\nexport { CalenderComponent };","map":{"version":3,"mappings":"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","names":["Component","CalenderComponent","constructor","taskService","Date","getMonth","getFullYear","getStartOfWeek","tasks","ngOnInit","getTasks","subscribe","next","data","generateCalendar","error","err","console","isMonthView","generateMonthView","generateWeekView","firstDay","currentYear","currentMonth","getDay","daysInMonth","getDate","today","calendar","week","i","push","date","isToday","day","toDateString","filter","task","startTime","length","weekStart","currentWeekStart","weekEnd","setDate","currentDate","diff","previousMonth","activeNavButton","nextMonth","previousWeek","nextWeek","getWeekRange","start","end","months","goToToday","showTaskPopup","selectedDay","showPopup","closePopup","switchToMonthView","switchToWeekView","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\fardo\\scheduler_manager\\src\\app\\components\\calender\\calender.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ITask } from 'src/interfaces/ITask';\nimport { TaskService } from 'src/services/task.service';\n\ninterface Day {\n  date: Date;\n  isToday: boolean;\n  tasks: ITask[];\n}\n\n@Component({\n  selector: 'app-calender',\n  templateUrl: './calender.component.html',\n  styleUrls: ['./calender.component.css'],\n})\nexport class CalenderComponent implements OnInit {\n  protected tasks: ITask[] = [];\n\n  constructor(private taskService: TaskService) {\n    this.tasks = [];\n  }\n  daysOfWeek = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n  months = [\n    'January',\n    'February',\n    'March',\n    'April',\n    'May',\n    'June',\n    'July',\n    'August',\n    'September',\n    'October',\n    'November',\n    'December',\n  ];\n\n  currentMonth = new Date().getMonth();\n  currentYear = new Date().getFullYear();\n  currentWeekStart: Date = this.getStartOfWeek(new Date());\n  calendar: Day[][] = [];\n  isMonthView = true;\n  activeNavButton: string = ''; \n\n\n  showPopup = false;\n  selectedDay: Day | null = null;\n\n  ngOnInit(): void {\n    this.getTasks();\n  }\n  getTasks() {\n    this.taskService.getTasks().subscribe({\n      next: (data) => {\n        this.tasks = data;\n        this.generateCalendar();\n      },\n      error: (err) => console.error('Error fetching tasks', err),\n    });\n  }\n  generateCalendar() {\n    if (this.isMonthView) {\n      this.generateMonthView();\n    } else {\n      this.generateWeekView();\n    }\n  }\n\n  generateMonthView() {\n    const firstDay = new Date(this.currentYear, this.currentMonth, 1).getDay();\n    const daysInMonth = new Date(\n      this.currentYear,\n      this.currentMonth + 1,\n      0\n    ).getDate();\n    const today = new Date();\n    let calendar: Day[][] = [];\n    let week: Day[] = [];\n\n    for (let i = 0; i < firstDay; i++) {\n      week.push({\n        date: new Date(this.currentYear, this.currentMonth, -firstDay + i + 1),\n        isToday: false,\n        tasks: [],\n      });\n    }\n\n    for (let day = 1; day <= daysInMonth; day++) {\n      const date = new Date(this.currentYear, this.currentMonth, day);\n      const isToday = date.toDateString() === today.toDateString();\n      const tasks = this.tasks.filter(\n        (task) =>\n          new Date(task.startTime).toDateString() === date.toDateString()\n      );\n\n      week.push({ date, isToday, tasks });\n\n      if (week.length === 7) {\n        calendar.push(week);\n        week = [];\n      }\n    }\n\n    if (week.length > 0) {\n      calendar.push(week);\n    }\n\n    this.calendar = calendar;\n  }\n\n  generateWeekView() {\n    const today = new Date();\n    const weekStart = this.currentWeekStart;\n    const weekEnd = new Date(weekStart);\n    weekEnd.setDate(weekEnd.getDate() + 6);\n\n    let calendar: Day[][] = [[]];\n    let currentDate = new Date(weekStart);\n\n    for (let i = 0; i < 7; i++) {\n      const date = new Date(currentDate);\n      const isToday = date.toDateString() === today.toDateString();\n      const tasks = this.tasks.filter(\n        (task) =>\n          new Date(task.startTime).toDateString() === date.toDateString()\n      );\n      calendar[0].push({ date, isToday, tasks });\n      currentDate.setDate(currentDate.getDate() + 1);\n    }\n\n    this.calendar = calendar;\n  }\n\n  getStartOfWeek(date: Date): Date {\n    const day = date.getDay();\n    const diff = date.getDate() - day + (day === 0 ? -6 : 1);\n    return new Date(date.setDate(diff));\n  }\n\n  previousMonth() {\n    this.activeNavButton = 'previous';\n    if (this.currentMonth === 0) {\n      this.currentMonth = 11;\n      this.currentYear--;\n    } else {\n      this.currentMonth--;\n    }\n    this.generateCalendar();\n  }\n\n  nextMonth() {\n    this.activeNavButton = 'next';\n    if (this.currentMonth === 11) {\n      this.currentMonth = 0;\n      this.currentYear++;\n    } else {\n      this.currentMonth++;\n    }\n    this.generateCalendar();\n  }\n\n  previousWeek() {\n    this.activeNavButton = 'previous';\n    this.currentWeekStart.setDate(this.currentWeekStart.getDate() - 7);\n    this.generateCalendar();\n  }\n\n  nextWeek() {\n    this.activeNavButton = 'next';\n    this.currentWeekStart.setDate(this.currentWeekStart.getDate() + 7);\n    this.generateCalendar();\n  }\n\n  getWeekRange(): string {\n    const start = this.currentWeekStart;\n    const end = new Date(start);\n    end.setDate(start.getDate() + 6);\n    return `${start.getDate()} ${\n      this.months[start.getMonth()]\n    } - ${end.getDate()} ${this.months[end.getMonth()]}`;\n  }\n\n  goToToday() {\n    this.activeNavButton = 'today';\n    const today = new Date();\n    this.currentMonth = today.getMonth();\n    this.currentYear = today.getFullYear();\n    this.currentWeekStart = this.getStartOfWeek(today);\n    this.generateCalendar();\n  }\n\n  showTaskPopup(day: Day) {\n    this.selectedDay = day;\n    this.showPopup = true;\n  }\n\n  closePopup() {\n    this.showPopup = false;\n  }\n\n  switchToMonthView() {\n    this.isMonthView = true;\n    this.generateCalendar();\n  }\n\n  switchToWeekView() {\n    this.isMonthView = false;\n    this.currentWeekStart = this.getStartOfWeek(new Date());\n    this.generateCalendar();\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}