{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/services/task.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nexport class CreateNewTaskComponent {\n  constructor(taskService, router) {\n    this.taskService = taskService;\n    this.router = router;\n  }\n  onSubmit(form) {\n    if (form.valid) {\n      const task = {\n        id: form.value.title,\n        startTime: form.value.startDate,\n        endTime: form.value.endDate,\n        duration: form.value.duration\n        // repeat: form.value.repeat\n      };\n\n      this.taskService.createTask(task).subscribe({\n        next: response => console.log('Task created', response),\n        error: err => console.error('Error creating task', err)\n      });\n    }\n  }\n  static #_ = this.ɵfac = function CreateNewTaskComponent_Factory(t) {\n    return new (t || CreateNewTaskComponent)(i0.ɵɵdirectiveInject(i1.TaskService), i0.ɵɵdirectiveInject(i2.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CreateNewTaskComponent,\n    selectors: [[\"app-create-new-task\"]],\n    decls: 23,\n    vars: 0,\n    consts: [[1, \"container\"], [3, \"ngSubmit\"], [\"taskForm\", \"ngForm\"], [1, \"form-group\"], [\"for\", \"title\"], [\"type\", \"text\", \"id\", \"title\", \"name\", \"title\", \"ngModel\", \"\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"startDate\"], [\"type\", \"datetime-local\", \"id\", \"startDate\", \"name\", \"startDate\", \"ngModel\", \"\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"endDate\"], [\"type\", \"datetime-local\", \"id\", \"endDate\", \"name\", \"endDate\", \"ngModel\", \"\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"duration\"], [\"type\", \"number\", \"id\", \"duration\", \"name\", \"duration\", \"ngModel\", \"\", \"required\", \"\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"]],\n    template: function CreateNewTaskComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r1 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n        i0.ɵɵtext(2, \"Create New Task\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"form\", 1, 2);\n        i0.ɵɵlistener(\"ngSubmit\", function CreateNewTaskComponent_Template_form_ngSubmit_3_listener() {\n          i0.ɵɵrestoreView(_r1);\n          const _r0 = i0.ɵɵreference(4);\n          return i0.ɵɵresetView(ctx.onSubmit(_r0));\n        });\n        i0.ɵɵelementStart(5, \"div\", 3)(6, \"label\", 4);\n        i0.ɵɵtext(7, \"Title\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(8, \"input\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"div\", 3)(10, \"label\", 6);\n        i0.ɵɵtext(11, \"Start Date\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(12, \"input\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"div\", 3)(14, \"label\", 8);\n        i0.ɵɵtext(15, \"End Date\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(16, \"input\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"div\", 3)(18, \"label\", 10);\n        i0.ɵɵtext(19, \"Duration (minutes)\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(20, \"input\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"button\", 12);\n        i0.ɵɵtext(22, \"Create Task\");\n        i0.ɵɵelementEnd()()();\n      }\n    },\n    dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NumberValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.NgModel, i3.NgForm],\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":";;;;AAUA,OAAM,MAAOA,sBAAsB;EACjCC,YAAoBC,WAAwB,EAAUC,MAAc;IAAhD,gBAAW,GAAXD,WAAW;IAAuB,WAAM,GAANC,MAAM;EAAW;EAEvEC,QAAQ,CAACC,IAAY;IACnB,IAAIA,IAAI,CAACC,KAAK,EAAE;MACd,MAAMC,IAAI,GAAG;QACXC,EAAE,EAAEH,IAAI,CAACI,KAAK,CAACC,KAAK;QACpBC,SAAS,EAAEN,IAAI,CAACI,KAAK,CAACG,SAAS;QAC/BC,OAAO,EAAER,IAAI,CAACI,KAAK,CAACK,OAAO;QAC3BC,QAAQ,EAAEV,IAAI,CAACI,KAAK,CAACM;QACrB;OACD;;MAED,IAAI,CAACb,WAAW,CAACc,UAAU,CAACT,IAAI,CAAC,CAACU,SAAS,CAAC;QAC1CC,IAAI,EAAGC,QAAQ,IAAKC,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEF,QAAQ,CAAC;QACzDG,KAAK,EAAGC,GAAG,IAAKH,OAAO,CAACE,KAAK,CAAC,qBAAqB,EAAEC,GAAG;OACzD,CAAC;;EAEN;EAAC;qBAlBUvB,sBAAsB;EAAA;EAAA;UAAtBA,sBAAsB;IAAAwB;IAAAC;IAAAC;IAAAC;IAAAC;MAAA;;QCVnCC,8BAAuB;QACjBA,+BAAe;QAAAA,iBAAK;QACxBA,kCAAyD;QAAnDA;UAAAA;UAAA;UAAA,OAAYA,gCAAkB;QAAA,EAAC;QACnCA,8BAAwB;QACHA,qBAAK;QAAAA,iBAAQ;QAChCA,2BAOE;QACJA,iBAAM;QAENA,8BAAwB;QACCA,2BAAU;QAAAA,iBAAQ;QACzCA,4BAOE;QACJA,iBAAM;QAENA,+BAAwB;QACDA,yBAAQ;QAAAA,iBAAQ;QACrCA,4BAOE;QACJA,iBAAM;QAENA,+BAAwB;QACAA,mCAAkB;QAAAA,iBAAQ;QAChDA,6BAOE;QACJA,iBAAM;QAaNA,mCAA8C;QAAAA,4BAAW;QAAAA,iBAAS","names":["CreateNewTaskComponent","constructor","taskService","router","onSubmit","form","valid","task","id","value","title","startTime","startDate","endTime","endDate","duration","createTask","subscribe","next","response","console","log","error","err","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["C:\\Users\\fardo\\scheduler_manager\\src\\app\\components\\tasks\\create-new-task\\create-new-task.component.ts","C:\\Users\\fardo\\scheduler_manager\\src\\app\\components\\tasks\\create-new-task\\create-new-task.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { TaskService } from 'src/services/task.service';\n\n@Component({\n  selector: 'app-create-new-task',\n  templateUrl: './create-new-task.component.html',\n  styleUrls: ['./create-new-task.component.css'],\n})\nexport class CreateNewTaskComponent {\n  constructor(private taskService: TaskService, private router: Router) {}\n\n  onSubmit(form: NgForm) {\n    if (form.valid) {\n      const task = {\n        id: form.value.title,\n        startTime: form.value.startDate,\n        endTime: form.value.endDate,\n        duration: form.value.duration,\n        // repeat: form.value.repeat\n      };\n\n      this.taskService.createTask(task).subscribe({\n        next: (response) => console.log('Task created', response),\n        error: (err) => console.error('Error creating task', err),\n      });\n    }\n  }\n}\n","<div class=\"container\">\n  <h2>Create New Task</h2>\n  <form (ngSubmit)=\"onSubmit(taskForm)\" #taskForm=\"ngForm\">\n    <div class=\"form-group\">\n      <label for=\"title\">Title</label>\n      <input\n        type=\"text\"\n        id=\"title\"\n        name=\"title\"\n        ngModel\n        required\n        class=\"form-control\"\n      />\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"startDate\">Start Date</label>\n      <input\n        type=\"datetime-local\"\n        id=\"startDate\"\n        name=\"startDate\"\n        ngModel\n        required\n        class=\"form-control\"\n      />\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"endDate\">End Date</label>\n      <input\n        type=\"datetime-local\"\n        id=\"endDate\"\n        name=\"endDate\"\n        ngModel\n        required\n        class=\"form-control\"\n      />\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"duration\">Duration (minutes)</label>\n      <input\n        type=\"number\"\n        id=\"duration\"\n        name=\"duration\"\n        ngModel\n        required\n        class=\"form-control\"\n      />\n    </div>\n\n    <!-- <div class=\"form-group\">\n      <label for=\"repeat\">Repeat Every</label>\n      <input\n        type=\"number\"\n        id=\"repeat\"\n        name=\"repeat\"\n        ngModel\n        class=\"form-control\"\n      />\n    </div> -->\n\n    <button type=\"submit\" class=\"btn btn-primary\">Create Task</button>\n  </form>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}