{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/services/task.service\";\nimport * as i2 from \"@angular/router\";\nexport class CreateNewTaskComponent {\n  constructor(taskService, router) {\n    this.taskService = taskService;\n    this.router = router;\n  }\n  onSubmit(form) {\n    if (form.valid) {\n      const task = {\n        title: form.value.title,\n        startDate: form.value.startDate,\n        endDate: form.value.endDate,\n        duration: form.value.duration,\n        repeat: form.value.repeat\n      };\n      this.taskService.createTask(task).subscribe(response => {\n        console.log('Task created successfully', response);\n        this.router.navigate(['/tasks']); // Navigate back to the tasks page\n      }, error => {\n        console.error('Error creating task', error);\n      });\n    }\n  }\n  static #_ = this.ɵfac = function CreateNewTaskComponent_Factory(t) {\n    return new (t || CreateNewTaskComponent)(i0.ɵɵdirectiveInject(i1.TaskService), i0.ɵɵdirectiveInject(i2.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CreateNewTaskComponent,\n    selectors: [[\"app-create-new-task\"]],\n    decls: 26,\n    vars: 0,\n    consts: [[1, \"container\"], [1, \"form-group\"], [\"for\", \"title\"], [\"type\", \"text\", \"id\", \"title\", \"name\", \"title\", \"ngModel\", \"\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"startDate\"], [\"type\", \"date\", \"id\", \"startDate\", \"name\", \"startDate\", \"ngModel\", \"\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"endDate\"], [\"type\", \"date\", \"id\", \"endDate\", \"name\", \"endDate\", \"ngModel\", \"\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"duration\"], [\"type\", \"number\", \"id\", \"duration\", \"name\", \"duration\", \"ngModel\", \"\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"repeat\"], [\"type\", \"number\", \"id\", \"repeat\", \"name\", \"repeat\", \"ngModel\", \"\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"]],\n    template: function CreateNewTaskComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n        i0.ɵɵtext(2, \"Create New Task\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"form\")(4, \"div\", 1)(5, \"label\", 2);\n        i0.ɵɵtext(6, \"Title\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(7, \"input\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"div\", 1)(9, \"label\", 4);\n        i0.ɵɵtext(10, \"Start Date\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(11, \"input\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"div\", 1)(13, \"label\", 6);\n        i0.ɵɵtext(14, \"End Date\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(15, \"input\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"div\", 1)(17, \"label\", 8);\n        i0.ɵɵtext(18, \"Duration (minutes)\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(19, \"input\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"div\", 1)(21, \"label\", 10);\n        i0.ɵɵtext(22, \"Repeat Every\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(23, \"input\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"button\", 12);\n        i0.ɵɵtext(25, \"Create Task\");\n        i0.ɵɵelementEnd()()();\n      }\n    },\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":";;;AAUA,OAAM,MAAOA,sBAAsB;EACjCC,YAAoBC,WAAwB,EAAUC,MAAc;IAAhD,gBAAW,GAAXD,WAAW;IAAuB,WAAM,GAANC,MAAM;EAAW;EAEvEC,QAAQ,CAACC,IAAY;IACnB,IAAIA,IAAI,CAACC,KAAK,EAAE;MACd,MAAMC,IAAI,GAAG;QACXC,KAAK,EAAEH,IAAI,CAACI,KAAK,CAACD,KAAK;QACvBE,SAAS,EAAEL,IAAI,CAACI,KAAK,CAACC,SAAS;QAC/BC,OAAO,EAAEN,IAAI,CAACI,KAAK,CAACE,OAAO;QAC3BC,QAAQ,EAAEP,IAAI,CAACI,KAAK,CAACG,QAAQ;QAC7BC,MAAM,EAAER,IAAI,CAACI,KAAK,CAACI;OACpB;MAED,IAAI,CAACX,WAAW,CAACY,UAAU,CAACP,IAAI,CAAC,CAACQ,SAAS,CACxCC,QAAQ,IAAI;QACXC,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAEF,QAAQ,CAAC;QAClD,IAAI,CAACb,MAAM,CAACgB,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;MACpC,CAAC,EACAC,KAAK,IAAI;QACRH,OAAO,CAACG,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;MAC7C,CAAC,CACF;;EAEL;EAAC;qBAvBUpB,sBAAsB;EAAA;EAAA;UAAtBA,sBAAsB;IAAAqB;IAAAC;IAAAC;IAAAC;IAAAC;MAAA;QCVnCC,8BAAuB;QACjBA,+BAAe;QAAAA,iBAAK;QACxBA,4BAAM;QAEiBA,qBAAK;QAAAA,iBAAQ;QAChCA,2BAOE;QACJA,iBAAM;QAENA,8BAAwB;QACCA,2BAAU;QAAAA,iBAAQ;QACzCA,4BAOE;QACJA,iBAAM;QAENA,+BAAwB;QACDA,yBAAQ;QAAAA,iBAAQ;QACrCA,4BAOE;QACJA,iBAAM;QAENA,+BAAwB;QACAA,mCAAkB;QAAAA,iBAAQ;QAChDA,4BAOE;QACJA,iBAAM;QAENA,+BAAwB;QACFA,6BAAY;QAAAA,iBAAQ;QACxCA,6BAME;QACJA,iBAAM;QAENA,mCAA8C;QAAAA,4BAAW;QAAAA,iBAAS","names":["CreateNewTaskComponent","constructor","taskService","router","onSubmit","form","valid","task","title","value","startDate","endDate","duration","repeat","createTask","subscribe","response","console","log","navigate","error","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["C:\\Users\\fardo\\scheduler_manager\\src\\app\\components\\tasks\\create-new-task\\create-new-task.component.ts","C:\\Users\\fardo\\scheduler_manager\\src\\app\\components\\tasks\\create-new-task\\create-new-task.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { TaskService } from 'src/services/task.service'; \n\n@Component({\n  selector: 'app-create-new-task',\n  templateUrl: './create-new-task.component.html',\n  styleUrls: ['./create-new-task.component.css']\n})\nexport class CreateNewTaskComponent {\n  constructor(private taskService: TaskService, private router: Router) {}\n\n  onSubmit(form: NgForm) {\n    if (form.valid) {\n      const task = {\n        title: form.value.title,\n        startDate: form.value.startDate,\n        endDate: form.value.endDate,\n        duration: form.value.duration,\n        repeat: form.value.repeat\n      };\n\n      this.taskService.createTask(task).subscribe(\n        (response) => {\n          console.log('Task created successfully', response);\n          this.router.navigate(['/tasks']); // Navigate back to the tasks page\n        },\n        (error) => {\n          console.error('Error creating task', error);\n        }\n      );\n    }\n  }\n}\n","<div class=\"container\">\n  <h2>Create New Task</h2>\n  <form>\n    <div class=\"form-group\">\n      <label for=\"title\">Title</label>\n      <input\n        type=\"text\"\n        id=\"title\"\n        name=\"title\"\n        ngModel\n        required\n        class=\"form-control\"\n      />\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"startDate\">Start Date</label>\n      <input\n        type=\"date\"\n        id=\"startDate\"\n        name=\"startDate\"\n        ngModel\n        required\n        class=\"form-control\"\n      />\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"endDate\">End Date</label>\n      <input\n        type=\"date\"\n        id=\"endDate\"\n        name=\"endDate\"\n        ngModel\n        required\n        class=\"form-control\"\n      />\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"duration\">Duration (minutes)</label>\n      <input\n        type=\"number\"\n        id=\"duration\"\n        name=\"duration\"\n        ngModel\n        required\n        class=\"form-control\"\n      />\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"repeat\">Repeat Every</label>\n      <input\n        type=\"number\"\n        id=\"repeat\"\n        name=\"repeat\"\n        ngModel\n        class=\"form-control\"\n      />\n    </div>\n\n    <button type=\"submit\" class=\"btn btn-primary\">Create Task</button>\n  </form>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}