{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nfunction CalenderComponent_div_25_div_1_span_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 20);\n    i0.ɵɵtext(1, \"\\u2022\");\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"current-day\": a0\n  };\n};\nfunction CalenderComponent_div_25_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 17)(1, \"div\", 18);\n    i0.ɵɵlistener(\"click\", function CalenderComponent_div_25_div_1_Template_div_click_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r6);\n      const day_r3 = restoredCtx.$implicit;\n      const ctx_r5 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r5.openDayModal(day_r3));\n    });\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"date\");\n    i0.ɵɵtemplate(4, CalenderComponent_div_25_div_1_span_4_Template, 2, 0, \"span\", 19);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const day_r3 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(6, _c0, ctx_r2.isToday(day_r3)));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(3, 3, day_r3.date, \"d\"), \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", day_r3.tasks.length);\n  }\n}\nfunction CalenderComponent_div_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 15);\n    i0.ɵɵtemplate(1, CalenderComponent_div_25_div_1_Template, 5, 8, \"div\", 16);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const week_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", week_r1);\n  }\n}\nexport class CalenderComponent {\n  constructor() {\n    this.currentMonth = new Date();\n    this.calendar = [];\n    this.selectedDay = null;\n  }\n  // constructor(private modalService: NgbModal) {}\n  ngOnInit() {\n    this.generateCalendar();\n  }\n  generateCalendar() {\n    const startOfMonth = new Date(this.currentMonth.getFullYear(), this.currentMonth.getMonth(), 1);\n    const endOfMonth = new Date(this.currentMonth.getFullYear(), this.currentMonth.getMonth() + 1, 0);\n    const calendar = [];\n    let week = [];\n    let currentDate = new Date(startOfMonth);\n    currentDate.setDate(currentDate.getDate() - currentDate.getDay());\n    while (currentDate <= endOfMonth || currentDate.getDay() !== 0) {\n      week.push({\n        date: new Date(currentDate),\n        tasks: this.getTasksForDay(currentDate) // fetch tasks for this day\n      });\n\n      if (currentDate.getDay() === 6) {\n        calendar.push(week);\n        week = [];\n      }\n      currentDate.setDate(currentDate.getDate() + 1);\n    }\n    this.calendar = calendar;\n  }\n  getTasksForDay(date) {\n    // Dummy tasks, replace with actual task data\n    const tasks = [{\n      title: 'Task 1',\n      startTime: '10:00',\n      endTime: '11:00'\n    }, {\n      title: 'Task 2',\n      startTime: '12:00',\n      endTime: '13:00'\n    }];\n    // For simplicity, we'll assume all tasks occur on the 15th of the month\n    if (date.getDate() === 15) {\n      return tasks;\n    }\n    return [];\n  }\n  prevMonth() {\n    this.currentMonth.setMonth(this.currentMonth.getMonth() - 1);\n    this.generateCalendar();\n  }\n  nextMonth() {\n    this.currentMonth.setMonth(this.currentMonth.getMonth() + 1);\n    this.generateCalendar();\n  }\n  isToday(date) {\n    const today = new Date();\n    return today.getDate() === date.date.getDate() && today.getMonth() === date.date.getMonth() && today.getFullYear() === date.date.getFullYear();\n  }\n  openDayModal(day) {\n    this.selectedDay = day;\n    // this.modalService.open(document.getElementById('taskModal'), {\n    //   ariaLabelledBy: 'taskModalLabel',\n    // });\n  }\n  static #_ = this.ɵfac = function CalenderComponent_Factory(t) {\n    return new (t || CalenderComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CalenderComponent,\n    selectors: [[\"app-calender\"]],\n    decls: 36,\n    vars: 5,\n    consts: [[1, \"container\", \"mt-5\"], [1, \"d-flex\", \"justify-content-between\", \"align-items-center\", \"mb-3\"], [1, \"btn\", \"btn-primary\", 3, \"click\"], [1, \"calendar\", \"bg-light\", \"p-3\"], [1, \"row\"], [1, \"col\", \"text-center\", \"font-weight-bold\"], [\"class\", \"row mt-2\", 4, \"ngFor\", \"ngForOf\"], [\"id\", \"taskModal\", \"tabindex\", \"-1\", \"aria-labelledby\", \"taskModalLabel\", \"aria-hidden\", \"true\", 1, \"modal\", \"fade\"], [1, \"modal-dialog\"], [1, \"modal-content\"], [1, \"modal-header\"], [\"id\", \"taskModalLabel\", 1, \"modal-title\"], [\"type\", \"button\", \"data-dismiss\", \"modal\", \"aria-label\", \"Close\", 1, \"close\"], [\"aria-hidden\", \"true\"], [1, \"modal-body\"], [1, \"row\", \"mt-2\"], [\"class\", \"col text-center\", 4, \"ngFor\", \"ngForOf\"], [1, \"col\", \"text-center\"], [1, \"day-box\", 3, \"ngClass\", \"click\"], [\"class\", \"task-dot\", 4, \"ngIf\"], [1, \"task-dot\"]],\n    template: function CalenderComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"button\", 2);\n        i0.ɵɵlistener(\"click\", function CalenderComponent_Template_button_click_2_listener() {\n          return ctx.prevMonth();\n        });\n        i0.ɵɵtext(3, \"Previous\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"h4\");\n        i0.ɵɵtext(5);\n        i0.ɵɵpipe(6, \"date\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"button\", 2);\n        i0.ɵɵlistener(\"click\", function CalenderComponent_Template_button_click_7_listener() {\n          return ctx.nextMonth();\n        });\n        i0.ɵɵtext(8, \"Next\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(9, \"div\", 3)(10, \"div\", 4)(11, \"div\", 5);\n        i0.ɵɵtext(12, \"Sun\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"div\", 5);\n        i0.ɵɵtext(14, \"Mon\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"div\", 5);\n        i0.ɵɵtext(16, \"Tue\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"div\", 5);\n        i0.ɵɵtext(18, \"Wed\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"div\", 5);\n        i0.ɵɵtext(20, \"Thu\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"div\", 5);\n        i0.ɵɵtext(22, \"Fri\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"div\", 5);\n        i0.ɵɵtext(24, \"Sat\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(25, CalenderComponent_div_25_Template, 2, 1, \"div\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(26, \"div\", 7)(27, \"div\", 8)(28, \"div\", 9)(29, \"div\", 10)(30, \"h5\", 11);\n        i0.ɵɵtext(31, \"Scheduled Tasks\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(32, \"button\", 12)(33, \"span\", 13);\n        i0.ɵɵtext(34, \"\\u00D7\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(35, \"div\", 14);\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(6, 2, ctx.currentMonth, \"MMMM yyyy\"));\n        i0.ɵɵadvance(20);\n        i0.ɵɵproperty(\"ngForOf\", ctx.calendar);\n      }\n    },\n    dependencies: [i1.NgClass, i1.NgForOf, i1.NgIf, i1.DatePipe],\n    styles: [\".dots[_ngcontent-%COMP%] {\\r\\n    text-align: center;\\r\\n  }\\r\\n  \\r\\n  .dot[_ngcontent-%COMP%] {\\r\\n    display: inline-block;\\r\\n    width: 10px;\\r\\n    height: 10px;\\r\\n    background-color: #007bff;\\r\\n    border-radius: 50%;\\r\\n    margin-right: 2px;\\r\\n  }\\r\\n  \\r\\n  td[_ngcontent-%COMP%] {\\r\\n    height: 100px;\\r\\n    vertical-align: top;\\r\\n    text-align: center;\\r\\n    position: relative;\\r\\n    cursor: pointer;\\r\\n  }\\r\\n  \\r\\n  td.active[_ngcontent-%COMP%] {\\r\\n    background-color: #f8f9fa;\\r\\n  }\\r\\n  \\r\\n  .modal[_ngcontent-%COMP%] {\\r\\n    display: block;\\r\\n    background-color: rgba(0, 0, 0, 0.5);\\r\\n  }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9jYWxlbmRlci9jYWxlbmRlci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksa0JBQWtCO0VBQ3BCOztFQUVBO0lBQ0UscUJBQXFCO0lBQ3JCLFdBQVc7SUFDWCxZQUFZO0lBQ1oseUJBQXlCO0lBQ3pCLGtCQUFrQjtJQUNsQixpQkFBaUI7RUFDbkI7O0VBRUE7SUFDRSxhQUFhO0lBQ2IsbUJBQW1CO0lBQ25CLGtCQUFrQjtJQUNsQixrQkFBa0I7SUFDbEIsZUFBZTtFQUNqQjs7RUFFQTtJQUNFLHlCQUF5QjtFQUMzQjs7RUFFQTtJQUNFLGNBQWM7SUFDZCxvQ0FBb0M7RUFDdEMiLCJzb3VyY2VzQ29udGVudCI6WyIuZG90cyB7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgfVxyXG4gIFxyXG4gIC5kb3Qge1xyXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgd2lkdGg6IDEwcHg7XHJcbiAgICBoZWlnaHQ6IDEwcHg7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDA3YmZmO1xyXG4gICAgYm9yZGVyLXJhZGl1czogNTAlO1xyXG4gICAgbWFyZ2luLXJpZ2h0OiAycHg7XHJcbiAgfVxyXG4gIFxyXG4gIHRkIHtcclxuICAgIGhlaWdodDogMTAwcHg7XHJcbiAgICB2ZXJ0aWNhbC1hbGlnbjogdG9wO1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gIH1cclxuICBcclxuICB0ZC5hY3RpdmUge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2Y4ZjlmYTtcclxuICB9XHJcbiAgXHJcbiAgLm1vZGFsIHtcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjUpO1xyXG4gIH1cclxuICAiXSwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}","map":{"version":3,"mappings":"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","names":["i0","CalenderComponent","constructor","Date","ngOnInit","generateCalendar","startOfMonth","currentMonth","getFullYear","getMonth","endOfMonth","calendar","week","currentDate","setDate","getDate","getDay","push","date","tasks","getTasksForDay","title","startTime","endTime","prevMonth","setMonth","nextMonth","isToday","today","openDayModal","day","selectedDay","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\fardo\\scheduler_manager\\src\\app\\components\\calender\\calender.component.html","C:\\Users\\fardo\\scheduler_manager\\src\\app\\components\\calender\\calender.component.ts"],"sourcesContent":["<div class=\"container mt-5\">    \n    <div class=\"d-flex justify-content-between align-items-center mb-3\">\n      <button class=\"btn btn-primary\" (click)=\"prevMonth()\">Previous</button>\n      <h4>{{ currentMonth | date: 'MMMM yyyy' }}</h4>\n      <button class=\"btn btn-primary\" (click)=\"nextMonth()\">Next</button>\n    </div>\n    \n    <div class=\"calendar bg-light p-3\">\n      <div class=\"row\">\n        <div class=\"col text-center font-weight-bold\">Sun</div>\n        <div class=\"col text-center font-weight-bold\">Mon</div>\n        <div class=\"col text-center font-weight-bold\">Tue</div>\n        <div class=\"col text-center font-weight-bold\">Wed</div>\n        <div class=\"col text-center font-weight-bold\">Thu</div>\n        <div class=\"col text-center font-weight-bold\">Fri</div>\n        <div class=\"col text-center font-weight-bold\">Sat</div>\n      </div>\n      <div class=\"row mt-2\" *ngFor=\"let week of calendar\">\n        <div class=\"col text-center\" *ngFor=\"let day of week\">\n          <div class=\"day-box\" [ngClass]=\"{'current-day': isToday(day)}\" (click)=\"openDayModal(day)\">\n            {{ day.date | date: 'd' }}\n            <span class=\"task-dot\" *ngIf=\"day.tasks.length\">•</span>\n          </div>\n        </div>\n      </div>\n    </div>\n  \n    <!-- Modal for displaying start and end date -->\n    <div\n      class=\"modal fade\"\n      id=\"taskModal\"\n      tabindex=\"-1\"\n      aria-labelledby=\"taskModalLabel\"\n      aria-hidden=\"true\"\n    >\n      <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n          <div class=\"modal-header\">\n            <h5 class=\"modal-title\" id=\"taskModalLabel\">Scheduled Tasks</h5>\n            <button\n              type=\"button\"\n              class=\"close\"\n              data-dismiss=\"modal\"\n              aria-label=\"Close\"\n            >\n              <span aria-hidden=\"true\">&times;</span>\n            </button>\n          </div>\n          <div class=\"modal-body\">\n            <!-- <p>Start Date: {{ selectedDay?.startDate | date: 'medium' }}</p>\n            <p>End Date: {{ selectedDay?.endDate | date: 'medium' }}</p>\n            <p *ngIf=\"!selectedDay?.tasks.length\">No tasks for this day.</p>\n            <ul *ngIf=\"selectedDay?.tasks.length\">\n              <li *ngFor=\"let task of selectedDay.tasks\">\n                Task: {{ task.title }} ({{ task.startTime }} - {{ task.endTime }})\n              </li>\n            </ul> -->\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  ","import { Component, OnInit } from '@angular/core';\n// import { NgbModal } from '@ng-bootstrap/ng-bootstrap';\n\n\ninterface Task {\n  title: string;\n  startTime: string;\n  endTime: string;\n}\n\ninterface Day {\n  date: Date;\n  tasks: Task[];\n}\n\n@Component({\n  selector: 'app-calender',\n  templateUrl: './calender.component.html',\n  styleUrls: ['./calender.component.css'],\n})\nexport class CalenderComponent implements OnInit {\n  currentMonth: Date = new Date();\n  calendar: Day[][] = [];\n  selectedDay: Day | null = null;\n\n  // constructor(private modalService: NgbModal) {}\n\n  ngOnInit(): void {\n    this.generateCalendar();\n  }\n\n  generateCalendar(): void {\n    const startOfMonth = new Date(\n      this.currentMonth.getFullYear(),\n      this.currentMonth.getMonth(),\n      1\n    );\n    const endOfMonth = new Date(\n      this.currentMonth.getFullYear(),\n      this.currentMonth.getMonth() + 1,\n      0\n    );\n\n    const calendar: Day[][] = [];\n    let week: Day[] = [];\n    let currentDate = new Date(startOfMonth);\n    currentDate.setDate(currentDate.getDate() - currentDate.getDay());\n\n    while (currentDate <= endOfMonth || currentDate.getDay() !== 0) {\n      week.push({\n        date: new Date(currentDate),\n        tasks: this.getTasksForDay(currentDate), // fetch tasks for this day\n      });\n\n      if (currentDate.getDay() === 6) {\n        calendar.push(week);\n        week = [];\n      }\n\n      currentDate.setDate(currentDate.getDate() + 1);\n    }\n\n    this.calendar = calendar;\n  }\n\n  getTasksForDay(date: Date): Task[] {\n    // Dummy tasks, replace with actual task data\n    const tasks: Task[] = [\n      { title: 'Task 1', startTime: '10:00', endTime: '11:00' },\n      { title: 'Task 2', startTime: '12:00', endTime: '13:00' },\n    ];\n\n    // For simplicity, we'll assume all tasks occur on the 15th of the month\n    if (date.getDate() === 15) {\n      return tasks;\n    }\n\n    return [];\n  }\n\n  prevMonth(): void {\n    this.currentMonth.setMonth(this.currentMonth.getMonth() - 1);\n    this.generateCalendar();\n  }\n\n  nextMonth(): void {\n    this.currentMonth.setMonth(this.currentMonth.getMonth() + 1);\n    this.generateCalendar();\n  }\n\n  isToday(date: Day): boolean {\n    const today = new Date();\n    return (\n      today.getDate() === date.date.getDate() &&\n      today.getMonth() === date.date.getMonth() &&\n      today.getFullYear() === date.date.getFullYear()\n    );\n  }\n\n  openDayModal(day: Day): void {\n    this.selectedDay = day;\n    // this.modalService.open(document.getElementById('taskModal'), {\n    //   ariaLabelledBy: 'taskModalLabel',\n    // });\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}