{"ast":null,"code":"import { v4 as uuidv4 } from 'uuid';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class TaskService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:8080/api/tasks';\n    this.counter = 0;\n  }\n  generateTaskId() {\n    return uuidv4();\n    ;\n  }\n  getTasks() {\n    return this.http.get(this.apiUrl);\n  }\n  getTaskById(id) {\n    return this.http.get(`${this.apiUrl}/${id}`);\n  }\n  createTask(taskData) {\n    return this.http.post(this.apiUrl, taskData);\n  }\n  updateTask(id, taskData) {\n    return this.http.put(`${this.apiUrl}/${id}`, taskData);\n  }\n  static #_ = this.ɵfac = function TaskService_Factory(t) {\n    return new (t || TaskService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: TaskService,\n    factory: TaskService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":"AAIA,SAASA,EAAE,IAAIC,MAAM,QAAQ,MAAM;;;AAMnC,OAAM,MAAOC,WAAW;EAItBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAHhB,WAAM,GAAG,iCAAiC;IAC1C,YAAO,GAAG,CAAC;EAEoB;EAEtCC,cAAc;IACb,OAAQJ,MAAM,EAAE;IAAC;EACnB;EAEAK,QAAQ;IACN,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAU,IAAI,CAACC,MAAM,CAAC;EAC5C;EAEAC,WAAW,CAACC,EAAU;IACpB,OAAO,IAAI,CAACN,IAAI,CAACG,GAAG,CAAQ,GAAG,IAAI,CAACC,MAAM,IAAIE,EAAE,EAAE,CAAC;EACrD;EAEAC,UAAU,CAACC,QAAe;IACxB,OAAO,IAAI,CAACR,IAAI,CAACS,IAAI,CAAC,IAAI,CAACL,MAAM,EAAEI,QAAQ,CAAC;EAC9C;EAEAE,UAAU,CAACJ,EAAU,EAAEE,QAAe;IACpC,OAAO,IAAI,CAACR,IAAI,CAACW,GAAG,CAAQ,GAAG,IAAI,CAACP,MAAM,IAAIE,EAAE,EAAE,EAAEE,QAAQ,CAAC;EAC/D;EAAC;qBAxBUV,WAAW;EAAA;EAAA;WAAXA,WAAW;IAAAc,SAAXd,WAAW;IAAAe,YAFV;EAAM","names":["v4","uuidv4","TaskService","constructor","http","generateTaskId","getTasks","get","apiUrl","getTaskById","id","createTask","taskData","post","updateTask","put","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\fardo\\scheduler_manager\\src\\services\\task-service\\task.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { ITask } from 'src/interfaces/ITask';\nimport { v4 as uuidv4 } from 'uuid';\n\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TaskService {\n  private apiUrl = 'http://localhost:8080/api/tasks';\n  private counter = 0; \n\n  constructor(private http: HttpClient) {}\n\n   generateTaskId(): string {\n    return  uuidv4();;\n  }\n\n  getTasks(): Observable<ITask[]> {\n    return this.http.get<ITask[]>(this.apiUrl);\n  }\n\n  getTaskById(id: string) {\n    return this.http.get<ITask>(`${this.apiUrl}/${id}`);\n  }\n\n  createTask(taskData: ITask) {\n    return this.http.post(this.apiUrl, taskData);\n  }\n\n  updateTask(id: string, taskData: ITask) {\n    return this.http.put<ITask>(`${this.apiUrl}/${id}`, taskData);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}