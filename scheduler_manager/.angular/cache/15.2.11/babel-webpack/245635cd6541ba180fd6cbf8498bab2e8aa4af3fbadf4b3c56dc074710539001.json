{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class TaskService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:8080/api/tasks';\n  }\n  getTasks() {\n    return this.http.get(this.apiUrl);\n  }\n  static #_ = this.ɵfac = function TaskService_Factory(t) {\n    return new (t || TaskService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: TaskService,\n    factory: TaskService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":";;AAQA,OAAM,MAAOA,WAAW;EAGtBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFhB,WAAM,GAAG,iCAAiC;EAEX;EAEvCC,QAAQ;IACN,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAQ,IAAI,CAACC,MAAM,CAAC;EAC1C;EAAC;qBAPUL,WAAW;EAAA;EAAA;WAAXA,WAAW;IAAAM,SAAXN,WAAW;IAAAO,YAFV;EAAM","names":["TaskService","constructor","http","getTasks","get","apiUrl","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\fardo\\scheduler_manager\\src\\services\\task.service.ts"],"sourcesContent":["import { ITask } from 'src/interfaces/ITask';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class TaskService {\r\n  private apiUrl = 'http://localhost:8080/api/tasks'; \r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getTasks(): Observable<any[]> {\r\n    return this.http.get<any[]>(this.apiUrl);\r\n  }\r\n\r\n//   getTaskById(id: number): Observable<any> {\r\n//     return this.http.get<any>(`${this.apiUrl}/${id}`);\r\n//   }\r\n\r\n//   createTask(taskData: any): Observable<any> {\r\n//     return this.http.post<any>(this.apiUrl, taskData);\r\n//   }\r\n\r\n//   updateTask(id: number, taskData: any): Observable<any> {\r\n//     return this.http.put<any>(`${this.apiUrl}/${id}`, taskData);\r\n//   }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}