{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class TaskService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:8080/api';\n  }\n  static #_ = this.ɵfac = function TaskService_Factory(t) {\n    return new (t || TaskService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: TaskService,\n    factory: TaskService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":";;AAOA,OAAM,MAAOA,WAAW;EAEtBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IADhB,WAAM,GAAG,2BAA2B;EACL;EAAC;qBAF7BF,WAAW;EAAA;EAAA;WAAXA,WAAW;IAAAG,SAAXH,WAAW;IAAAI,YAFV;EAAM","names":["TaskService","constructor","http","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\fardo\\scheduler_manager\\src\\services\\task.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TaskService {\n  private apiUrl = 'http://localhost:8080/api';\n  constructor(private http: HttpClient) {}\n\n  // getTasks(): Observable<any[]> {\n  //   return this.http.get<any[]>(this.apiUrl);\n  // }\n\n  // getTaskById(id: number): Observable<any> {\n  //   return this.http.get<any>(`${this.apiUrl}/${id}`);\n  // }\n\n  // createTask(taskData: any): Observable<any> {\n  //   return this.http.post<any>(this.apiUrl, taskData);\n  // }\n\n  // updateTask(id: number, taskData: any): Observable<any> {\n  //   return this.http.put<any>(`${this.apiUrl}/${id}`, taskData);\n  // }\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}