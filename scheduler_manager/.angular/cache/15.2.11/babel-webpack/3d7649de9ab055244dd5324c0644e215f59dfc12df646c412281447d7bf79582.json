{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet CalendarComponent = class CalendarComponent {\n  constructor() {\n    this.daysOfWeek = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n    this.months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n    this.currentMonth = new Date().getMonth();\n    this.currentYear = new Date().getFullYear();\n    this.calendar = [];\n    this.showPopup = false;\n    this.selectedDay = null;\n    this.tasks = [{\n      id: '1',\n      startTime: '2024-09-02 14:00',\n      endTime: '2024-09-02 16:00'\n    }, {\n      id: '2',\n      startTime: '2024-09-16 09:00',\n      endTime: '2024-09-16 10:00'\n    }];\n  }\n  ngOnInit() {\n    this.generateCalendar(this.currentMonth, this.currentYear);\n  }\n  generateCalendar(month, year) {\n    const firstDay = new Date(year, month, 1).getDay();\n    const daysInMonth = new Date(year, month + 1, 0).getDate();\n    const today = new Date();\n    const calendar = [];\n    let week = [];\n    for (let i = 0; i < firstDay; i++) {\n      week.push({\n        date: new Date(year, month, -firstDay + i + 1),\n        isToday: false,\n        tasks: []\n      });\n    }\n    for (let day = 1; day <= daysInMonth; day++) {\n      const date = new Date(year, month, day);\n      const isToday = date.toDateString() === today.toDateString();\n      const tasks = this.tasks.filter(task => new Date(task.startTime).toDateString() === date.toDateString());\n      week.push({\n        date,\n        isToday,\n        tasks\n      });\n      if (week.length === 7) {\n        calendar.push(week);\n        week = [];\n      }\n    }\n    if (week.length > 0) {\n      calendar.push(week);\n    }\n    this.calendar = calendar;\n  }\n  previousMonth() {\n    if (this.currentMonth === 0) {\n      this.currentMonth = 11;\n      this.currentYear--;\n    } else {\n      this.currentMonth--;\n    }\n    this.generateCalendar(this.currentMonth, this.currentYear);\n  }\n  nextMonth() {\n    if (this.currentMonth === 11) {\n      this.currentMonth = 0;\n      this.currentYear++;\n    } else {\n      this.currentMonth++;\n    }\n    this.generateCalendar(this.currentMonth, this.currentYear);\n  }\n  showTaskPopup(day) {\n    this.selectedDay = day;\n    this.showPopup = true;\n  }\n  closePopup() {\n    this.showPopup = false;\n  }\n};\nCalendarComponent = __decorate([Component({\n  selector: 'app-calendar',\n  templateUrl: ['./calendar.component.html'],\n  styleUrls: ['./calendar.component.css']\n})], CalendarComponent);\nexport { CalendarComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAmB1C,IAAMC,iBAAiB,GAAvB,MAAMA,iBAAiB;EAAvBC;IACL,eAAU,GAAG,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;IAC9D,WAAM,GAAG,CACP,SAAS,EAAE,UAAU,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,QAAQ,EACxE,WAAW,EAAE,SAAS,EAAE,UAAU,EAAE,UAAU,CAC/C;IAED,iBAAY,GAAG,IAAIC,IAAI,EAAE,CAACC,QAAQ,EAAE;IACpC,gBAAW,GAAG,IAAID,IAAI,EAAE,CAACE,WAAW,EAAE;IACtC,aAAQ,GAAY,EAAE;IAEtB,cAAS,GAAG,KAAK;IACjB,gBAAW,GAAe,IAAI;IAE9B,UAAK,GAAW,CACd;MAAEC,EAAE,EAAE,GAAG;MAAEC,SAAS,EAAE,kBAAkB;MAAEC,OAAO,EAAE;IAAkB,CAAE,EACvE;MAAEF,EAAE,EAAE,GAAG;MAAEC,SAAS,EAAE,kBAAkB;MAAEC,OAAO,EAAE;IAAkB,CAAE,CACxE;EAiEH;EA/DEC,QAAQ;IACN,IAAI,CAACC,gBAAgB,CAAC,IAAI,CAACC,YAAY,EAAE,IAAI,CAACC,WAAW,CAAC;EAC5D;EAEAF,gBAAgB,CAACG,KAAa,EAAEC,IAAY;IAC1C,MAAMC,QAAQ,GAAG,IAAIZ,IAAI,CAACW,IAAI,EAAED,KAAK,EAAE,CAAC,CAAC,CAACG,MAAM,EAAE;IAClD,MAAMC,WAAW,GAAG,IAAId,IAAI,CAACW,IAAI,EAAED,KAAK,GAAG,CAAC,EAAE,CAAC,CAAC,CAACK,OAAO,EAAE;IAC1D,MAAMC,KAAK,GAAG,IAAIhB,IAAI,EAAE;IACxB,MAAMiB,QAAQ,GAAY,EAAE;IAC5B,IAAIC,IAAI,GAAU,EAAE;IAEpB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGP,QAAQ,EAAEO,CAAC,EAAE,EAAE;MACjCD,IAAI,CAACE,IAAI,CAAC;QAAEC,IAAI,EAAE,IAAIrB,IAAI,CAACW,IAAI,EAAED,KAAK,EAAE,CAACE,QAAQ,GAAGO,CAAC,GAAG,CAAC,CAAC;QAAEG,OAAO,EAAE,KAAK;QAAEC,KAAK,EAAE;MAAE,CAAE,CAAC;;IAG1F,KAAK,IAAIC,GAAG,GAAG,CAAC,EAAEA,GAAG,IAAIV,WAAW,EAAEU,GAAG,EAAE,EAAE;MAC3C,MAAMH,IAAI,GAAG,IAAIrB,IAAI,CAACW,IAAI,EAAED,KAAK,EAAEc,GAAG,CAAC;MACvC,MAAMF,OAAO,GAAGD,IAAI,CAACI,YAAY,EAAE,KAAKT,KAAK,CAACS,YAAY,EAAE;MAC5D,MAAMF,KAAK,GAAG,IAAI,CAACA,KAAK,CAACG,MAAM,CAACC,IAAI,IAAI,IAAI3B,IAAI,CAAC2B,IAAI,CAACvB,SAAS,CAAC,CAACqB,YAAY,EAAE,KAAKJ,IAAI,CAACI,YAAY,EAAE,CAAC;MAExGP,IAAI,CAACE,IAAI,CAAC;QAAEC,IAAI;QAAEC,OAAO;QAAEC;MAAK,CAAE,CAAC;MAEnC,IAAIL,IAAI,CAACU,MAAM,KAAK,CAAC,EAAE;QACrBX,QAAQ,CAACG,IAAI,CAACF,IAAI,CAAC;QACnBA,IAAI,GAAG,EAAE;;;IAIb,IAAIA,IAAI,CAACU,MAAM,GAAG,CAAC,EAAE;MACnBX,QAAQ,CAACG,IAAI,CAACF,IAAI,CAAC;;IAGrB,IAAI,CAACD,QAAQ,GAAGA,QAAQ;EAC1B;EAEAY,aAAa;IACX,IAAI,IAAI,CAACrB,YAAY,KAAK,CAAC,EAAE;MAC3B,IAAI,CAACA,YAAY,GAAG,EAAE;MACtB,IAAI,CAACC,WAAW,EAAE;KACnB,MAAM;MACL,IAAI,CAACD,YAAY,EAAE;;IAErB,IAAI,CAACD,gBAAgB,CAAC,IAAI,CAACC,YAAY,EAAE,IAAI,CAACC,WAAW,CAAC;EAC5D;EAEAqB,SAAS;IACP,IAAI,IAAI,CAACtB,YAAY,KAAK,EAAE,EAAE;MAC5B,IAAI,CAACA,YAAY,GAAG,CAAC;MACrB,IAAI,CAACC,WAAW,EAAE;KACnB,MAAM;MACL,IAAI,CAACD,YAAY,EAAE;;IAErB,IAAI,CAACD,gBAAgB,CAAC,IAAI,CAACC,YAAY,EAAE,IAAI,CAACC,WAAW,CAAC;EAC5D;EAEAsB,aAAa,CAACP,GAAQ;IACpB,IAAI,CAACQ,WAAW,GAAGR,GAAG;IACtB,IAAI,CAACS,SAAS,GAAG,IAAI;EACvB;EAEAC,UAAU;IACR,IAAI,CAACD,SAAS,GAAG,KAAK;EACxB;CACD;AAlFYnC,iBAAiB,eAL7BD,SAAS,CAAC;EACTsC,QAAQ,EAAE,cAAc;EACxBC,WAAW,EAAC,CAAE,2BAA2B,CAAC;EAC1CC,SAAS,EAAE,CAAC,0BAA0B;CACvC,CAAC,GACWvC,iBAAiB,CAkF7B;SAlFYA,iBAAiB","names":["Component","CalendarComponent","constructor","Date","getMonth","getFullYear","id","startTime","endTime","ngOnInit","generateCalendar","currentMonth","currentYear","month","year","firstDay","getDay","daysInMonth","getDate","today","calendar","week","i","push","date","isToday","tasks","day","toDateString","filter","task","length","previousMonth","nextMonth","showTaskPopup","selectedDay","showPopup","closePopup","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\fardo\\scheduler_manager\\src\\app\\components\\calender\\calender.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\n\ninterface Task {\n  id: string;\n  startTime: string;\n  endTime: string;\n}\n\ninterface Day {\n  date: Date;\n  isToday: boolean;\n  tasks: Task[];\n}\n\n@Component({\n  selector: 'app-calendar',\n  templateUrl:[ './calendar.component.html'],\n  styleUrls: ['./calendar.component.css']\n})\nexport class CalendarComponent implements OnInit {\n  daysOfWeek = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n  months = [\n    'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August',\n    'September', 'October', 'November', 'December'\n  ];\n\n  currentMonth = new Date().getMonth();\n  currentYear = new Date().getFullYear();\n  calendar: Day[][] = [];\n\n  showPopup = false;\n  selectedDay: Day | null = null;\n\n  tasks: Task[] = [\n    { id: '1', startTime: '2024-09-02 14:00', endTime: '2024-09-02 16:00' },\n    { id: '2', startTime: '2024-09-16 09:00', endTime: '2024-09-16 10:00' }\n  ];\n\n  ngOnInit() {\n    this.generateCalendar(this.currentMonth, this.currentYear);\n  }\n\n  generateCalendar(month: number, year: number) {\n    const firstDay = new Date(year, month, 1).getDay();\n    const daysInMonth = new Date(year, month + 1, 0).getDate();\n    const today = new Date();\n    const calendar: Day[][] = [];\n    let week: Day[] = [];\n\n    for (let i = 0; i < firstDay; i++) {\n      week.push({ date: new Date(year, month, -firstDay + i + 1), isToday: false, tasks: [] });\n    }\n\n    for (let day = 1; day <= daysInMonth; day++) {\n      const date = new Date(year, month, day);\n      const isToday = date.toDateString() === today.toDateString();\n      const tasks = this.tasks.filter(task => new Date(task.startTime).toDateString() === date.toDateString());\n\n      week.push({ date, isToday, tasks });\n\n      if (week.length === 7) {\n        calendar.push(week);\n        week = [];\n      }\n    }\n\n    if (week.length > 0) {\n      calendar.push(week);\n    }\n\n    this.calendar = calendar;\n  }\n\n  previousMonth() {\n    if (this.currentMonth === 0) {\n      this.currentMonth = 11;\n      this.currentYear--;\n    } else {\n      this.currentMonth--;\n    }\n    this.generateCalendar(this.currentMonth, this.currentYear);\n  }\n\n  nextMonth() {\n    if (this.currentMonth === 11) {\n      this.currentMonth = 0;\n      this.currentYear++;\n    } else {\n      this.currentMonth++;\n    }\n    this.generateCalendar(this.currentMonth, this.currentYear);\n  }\n\n  showTaskPopup(day: Day) {\n    this.selectedDay = day;\n    this.showPopup = true;\n  }\n\n  closePopup() {\n    this.showPopup = false;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}