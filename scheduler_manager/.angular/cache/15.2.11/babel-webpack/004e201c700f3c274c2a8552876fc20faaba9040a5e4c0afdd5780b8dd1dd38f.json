{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/services/task.service\";\nimport * as i2 from \"@angular/router\";\nexport class CreateNewTaskComponent {\n  constructor(taskService, router) {\n    this.taskService = taskService;\n    this.router = router;\n  }\n  onSubmit(form) {\n    if (form.valid) {\n      const task = {\n        id: form.value.title,\n        startTime: form.value.startDate,\n        endTime: form.value.endDate,\n        duration: form.value.duration\n        // repeat: form.value.repeat\n      };\n\n      console.log(task);\n      this.taskService.createTask(task).subscribe({\n        next: response => console.log('Task created', response),\n        error: err => console.error('Error creating task', err.message)\n      });\n    }\n  }\n  static #_ = this.ɵfac = function CreateNewTaskComponent_Factory(t) {\n    return new (t || CreateNewTaskComponent)(i0.ɵɵdirectiveInject(i1.TaskService), i0.ɵɵdirectiveInject(i2.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CreateNewTaskComponent,\n    selectors: [[\"app-create-new-task\"]],\n    decls: 47,\n    vars: 0,\n    consts: [[\"lang\", \"en\"], [\"charset\", \"UTF-8\"], [\"name\", \"viewport\", \"content\", \"width=device-width, initial-scale=1.0\"], [1, \"container\"], [1, \"row\"], [\"for\", \"startDate\"], [\"type\", \"date\", \"id\", \"startDate\", \"name\", \"startDate\", \"required\", \"\"], [1, \"line\"], [\"type\", \"date\", \"id\", \"endDate\", \"name\", \"endDate\", \"required\", \"\"], [\"for\", \"startTime\"], [\"type\", \"number\", \"id\", \"startHour\", \"name\", \"startHour\", \"min\", \"0\", \"max\", \"23\", \"required\", \"\"], [\"type\", \"number\", \"id\", \"startMinute\", \"name\", \"startMinute\", \"min\", \"0\", \"max\", \"59\", \"required\", \"\"], [\"type\", \"number\", \"id\", \"endHour\", \"name\", \"endHour\", \"min\", \"0\", \"max\", \"23\", \"required\", \"\"], [\"type\", \"number\", \"id\", \"endMinute\", \"name\", \"endMinute\", \"min\", \"0\", \"max\", \"59\", \"required\", \"\"], [1, \"radio-group\"], [\"type\", \"radio\", \"name\", \"frequency\", \"value\", \"daily\", \"checked\", \"\"], [\"type\", \"radio\", \"name\", \"frequency\", \"value\", \"weekly\"], [1, \"repeat-group\"], [\"for\", \"repeatInterval\"], [\"type\", \"number\", \"id\", \"repeatInterval\", \"name\", \"repeatInterval\", \"min\", \"1\", \"required\", \"\"], [\"type\", \"submit\"]],\n    template: function CreateNewTaskComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"html\", 0)(1, \"head\");\n        i0.ɵɵelement(2, \"meta\", 1)(3, \"meta\", 2);\n        i0.ɵɵelementStart(4, \"title\");\n        i0.ɵɵtext(5, \"Create New Task\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(6, \"body\")(7, \"div\", 3)(8, \"h1\");\n        i0.ɵɵtext(9, \"Create New Task\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"div\", 4)(11, \"label\", 5);\n        i0.ɵɵtext(12, \"Start Date:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(13, \"input\", 6);\n        i0.ɵɵelementStart(14, \"span\", 7);\n        i0.ɵɵtext(15, \" - \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(16, \"input\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"div\", 4)(18, \"label\", 9);\n        i0.ɵɵtext(19, \"Start Time:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(20, \"input\", 10);\n        i0.ɵɵelementStart(21, \"span\", 7);\n        i0.ɵɵtext(22, \":\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(23, \"input\", 11);\n        i0.ɵɵelementStart(24, \"span\", 7);\n        i0.ɵɵtext(25, \" to \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(26, \"input\", 12);\n        i0.ɵɵelementStart(27, \"span\", 7);\n        i0.ɵɵtext(28, \":\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(29, \"input\", 13);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(30, \"div\", 14)(31, \"label\");\n        i0.ɵɵtext(32, \"Frequency:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(33, \"label\");\n        i0.ɵɵelement(34, \"input\", 15);\n        i0.ɵɵtext(35, \" Daily\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(36, \"label\");\n        i0.ɵɵelement(37, \"input\", 16);\n        i0.ɵɵtext(38, \" Weekly\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(39, \"div\", 17)(40, \"label\", 18);\n        i0.ɵɵtext(41, \"Repeat every:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(42, \"input\", 19);\n        i0.ɵɵelementStart(43, \"span\");\n        i0.ɵɵtext(44, \"days\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(45, \"button\", 20);\n        i0.ɵɵtext(46, \"Create Task\");\n        i0.ɵɵelementEnd()()()();\n      }\n    },\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\", \".container[_ngcontent-%COMP%] {\\n            max-width: 600px;\\n            margin: 0 auto;\\n            padding: 20px;\\n        }\\n        .row[_ngcontent-%COMP%] {\\n            display: flex;\\n            align-items: center;\\n            margin-bottom: 10px;\\n        }\\n        .row[_ngcontent-%COMP%]   label[_ngcontent-%COMP%] {\\n            width: 150px;\\n        }\\n        .row[_ngcontent-%COMP%]   input[type=\\\"text\\\"][_ngcontent-%COMP%], .row[_ngcontent-%COMP%]   input[type=\\\"number\\\"][_ngcontent-%COMP%] {\\n            flex: 1;\\n        }\\n        .row[_ngcontent-%COMP%]   .line[_ngcontent-%COMP%] {\\n            margin: 0 10px;\\n            font-size: 1.2em;\\n        }\\n        .radio-group[_ngcontent-%COMP%] {\\n            display: flex;\\n            align-items: center;\\n            margin-bottom: 10px;\\n        }\\n        .radio-group[_ngcontent-%COMP%]   label[_ngcontent-%COMP%] {\\n            margin-right: 20px;\\n        }\\n        .repeat-group[_ngcontent-%COMP%] {\\n            display: flex;\\n            align-items: center;\\n            margin-bottom: 10px;\\n        }\\n        .repeat-group[_ngcontent-%COMP%]   input[type=\\\"number\\\"][_ngcontent-%COMP%] {\\n            width: 80px;\\n            margin-right: 5px;\\n        }\"]\n  });\n}","map":{"version":3,"mappings":";;;AAUA,OAAM,MAAOA,sBAAsB;EACjCC,YAAoBC,WAAwB,EAAUC,MAAc;IAAhD,gBAAW,GAAXD,WAAW;IAAuB,WAAM,GAANC,MAAM;EAAW;EAEvEC,QAAQ,CAACC,IAAY;IACnB,IAAIA,IAAI,CAACC,KAAK,EAAE;MACd,MAAMC,IAAI,GAAG;QACXC,EAAE,EAAEH,IAAI,CAACI,KAAK,CAACC,KAAK;QACpBC,SAAS,EAAEN,IAAI,CAACI,KAAK,CAACG,SAAS;QAC/BC,OAAO,EAAER,IAAI,CAACI,KAAK,CAACK,OAAO;QAC3BC,QAAQ,EAAEV,IAAI,CAACI,KAAK,CAACM;QACrB;OACD;;MACDC,OAAO,CAACC,GAAG,CAACV,IAAI,CAAC;MACjB,IAAI,CAACL,WAAW,CAACgB,UAAU,CAACX,IAAI,CAAC,CAACY,SAAS,CAAC;QAC1CC,IAAI,EAAGC,QAAQ,IAAKL,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEI,QAAQ,CAAC;QACzDC,KAAK,EAAGC,GAAG,IAAKP,OAAO,CAACM,KAAK,CAAC,qBAAqB,EAAEC,GAAG,CAACC,OAAO;OACjE,CAAC;;EAEN;EAAC;qBAlBUxB,sBAAsB;EAAA;EAAA;UAAtBA,sBAAsB;IAAAyB;IAAAC;IAAAC;IAAAC;IAAAC;MAAA;QCTnCC,+BAAgB;QAEZA,0BAAsB;QAEtBA,6BAAO;QAAAA,+BAAe;QAAAA,iBAAQ;QA0ClCA,4BAAM;QAEMA,+BAAe;QAAAA,iBAAK;QAGxBA,+BAAiB;QACUA,4BAAW;QAAAA,iBAAQ;QAC1CA,4BAA4D;QAC5DA,gCAAmB;QAACA,oBAAE;QAAAA,iBAAO;QAC7BA,4BAAwD;QAC5DA,iBAAM;QAGNA,+BAAiB;QACUA,4BAAW;QAAAA,iBAAQ;QAC1CA,6BAA+E;QAC/EA,gCAAmB;QAAAA,kBAAC;QAAAA,iBAAO;QAC3BA,6BAAmF;QACnFA,gCAAmB;QAACA,qBAAG;QAAAA,iBAAO;QAC9BA,6BAA2E;QAC3EA,gCAAmB;QAAAA,kBAAC;QAAAA,iBAAO;QAC3BA,6BAA+E;QACnFA,iBAAM;QAGNA,gCAAyB;QACdA,2BAAU;QAAAA,iBAAQ;QACzBA,8BAAO;QAAAA,6BAA2D;QAACA,uBAAK;QAAAA,iBAAQ;QAChFA,8BAAO;QAAAA,6BAAoD;QAACA,wBAAM;QAAAA,iBAAQ;QAI9EA,gCAA0B;QACMA,8BAAa;QAAAA,iBAAQ;QACjDA,6BAAgF;QAChFA,6BAAM;QAAAA,qBAAI;QAAAA,iBAAO;QAGrBA,mCAAsB;QAAAA,4BAAW;QAAAA,iBAAS","names":["CreateNewTaskComponent","constructor","taskService","router","onSubmit","form","valid","task","id","value","title","startTime","startDate","endTime","endDate","duration","console","log","createTask","subscribe","next","response","error","err","message","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["C:\\Users\\fardo\\scheduler_manager\\src\\app\\components\\tasks\\create-new-task\\create-new-task.component.ts","C:\\Users\\fardo\\scheduler_manager\\src\\app\\components\\tasks\\create-new-task\\create-new-task.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { TaskService } from 'src/services/task.service';\n\n@Component({\n  selector: 'app-create-new-task',\n  templateUrl: './create-new-task.component.html',\n  styleUrls: ['./create-new-task.component.css'],\n})\nexport class CreateNewTaskComponent {\n  constructor(private taskService: TaskService, private router: Router) {}\n\n  onSubmit(form: NgForm) {\n    if (form.valid) {\n      const task = {\n        id: form.value.title,\n        startTime: form.value.startDate,\n        endTime: form.value.endDate,\n        duration: form.value.duration,\n        // repeat: form.value.repeat\n      };\n      console.log(task);\n      this.taskService.createTask(task).subscribe({\n        next: (response) => console.log('Task created', response),\n        error: (err) => console.error('Error creating task', err.message),\n      });\n    }\n  }\n}\n","<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Create New Task</title>\n    <style>\n        .container {\n            max-width: 600px;\n            margin: 0 auto;\n            padding: 20px;\n        }\n        .row {\n            display: flex;\n            align-items: center;\n            margin-bottom: 10px;\n        }\n        .row label {\n            width: 150px;\n        }\n        .row input[type=\"text\"],\n        .row input[type=\"number\"] {\n            flex: 1;\n        }\n        .row .line {\n            margin: 0 10px;\n            font-size: 1.2em;\n        }\n        .radio-group {\n            display: flex;\n            align-items: center;\n            margin-bottom: 10px;\n        }\n        .radio-group label {\n            margin-right: 20px;\n        }\n        .repeat-group {\n            display: flex;\n            align-items: center;\n            margin-bottom: 10px;\n        }\n        .repeat-group input[type=\"number\"] {\n            width: 80px;\n            margin-right: 5px;\n        }\n    </style>\n</head>\n<body>\n    <div class=\"container\">\n        <h1>Create New Task</h1>\n\n        <!-- Start Time and Date Range -->\n        <div class=\"row\">\n            <label for=\"startDate\">Start Date:</label>\n            <input type=\"date\" id=\"startDate\" name=\"startDate\" required>\n            <span class=\"line\"> - </span>\n            <input type=\"date\" id=\"endDate\" name=\"endDate\" required>\n        </div>\n\n        <!-- Hour and Minute Input -->\n        <div class=\"row\">\n            <label for=\"startTime\">Start Time:</label>\n            <input type=\"number\" id=\"startHour\" name=\"startHour\" min=\"0\" max=\"23\" required>\n            <span class=\"line\">:</span>\n            <input type=\"number\" id=\"startMinute\" name=\"startMinute\" min=\"0\" max=\"59\" required>\n            <span class=\"line\"> to </span>\n            <input type=\"number\" id=\"endHour\" name=\"endHour\" min=\"0\" max=\"23\" required>\n            <span class=\"line\">:</span>\n            <input type=\"number\" id=\"endMinute\" name=\"endMinute\" min=\"0\" max=\"59\" required>\n        </div>\n\n        <!-- Frequency Radio Buttons -->\n        <div class=\"radio-group\">\n            <label>Frequency:</label>\n            <label><input type=\"radio\" name=\"frequency\" value=\"daily\" checked> Daily</label>\n            <label><input type=\"radio\" name=\"frequency\" value=\"weekly\"> Weekly</label>\n        </div>\n\n        <!-- Repeat Every Input -->\n        <div class=\"repeat-group\">\n            <label for=\"repeatInterval\">Repeat every:</label>\n            <input type=\"number\" id=\"repeatInterval\" name=\"repeatInterval\" min=\"1\" required>\n            <span>days</span>\n        </div>\n        \n        <button type=\"submit\">Create Task</button>\n    </div>\n</body>\n</html>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}